name: Create Release

on:
  push:
    tags:
      - 'v*' # Run workflow on version tags (v1.0.0, v2.1.3, etc.)

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for changelog generation

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Install dependencies
        run: npm install

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Build project
        run: npm run build
        env:
          DEBUG: '1'

      - name: Examine ZIP contents on failure
        if: ${{ failure() }}
        run: |
          echo "Checking if ZIP file exists..."
          if [ -f "dist/fluid-design-system-for-elementor.zip" ]; then
            echo "✅ ZIP file exists"
            echo "Listing ZIP contents:"
            unzip -l dist/fluid-design-system-for-elementor.zip
            
            echo "Extracting ZIP to check structure..."
            mkdir -p /tmp/zip-check
            unzip -q dist/fluid-design-system-for-elementor.zip -d /tmp/zip-check
            
            echo "Checking for vendor/autoload.php..."
            if [ -f "/tmp/zip-check/fluid-design-system-for-elementor/vendor/autoload.php" ]; then
              echo "✅ vendor/autoload.php exists in ZIP"
            else
              echo "❌ vendor/autoload.php missing from ZIP"
              echo "Directory structure:"
              find /tmp/zip-check -type f | grep -i vendor || echo "No vendor files found"
            fi
          else
            echo "❌ ZIP file not found at dist/fluid-design-system-for-elementor.zip"
          fi

      - name: Validate plugin structure
        run: bash __tests__/validate-zip.sh
        env:
          DEBUG: '1'

  build_and_release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write # This is required for creating releases
      pull-requests: read # This is needed for the changelog generator
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for changelog generation

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Validate version consistency
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          PLUGIN_VERSION=$(grep -m 1 "Version:" src/wordpress-plugin/fluid-design-system-for-elementor.php | awk '{print $3}')
          README_VERSION=$(grep "Stable tag:" src/wordpress-plugin/readme.txt | awk '{print $3}')
          PACKAGE_VERSION=$(node -p "require('./package.json').version")

          echo "Tag version: $TAG_VERSION"
          echo "Plugin version: $PLUGIN_VERSION"
          echo "Readme version: $README_VERSION"
          echo "Package.json version: $PACKAGE_VERSION"

          if [ "$TAG_VERSION" != "$PLUGIN_VERSION" ] || [ "$TAG_VERSION" != "$README_VERSION" ] || [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "❌ Version mismatch detected!"
            exit 1
          fi

          echo "✅ All versions match: $TAG_VERSION"

      - name: Install dependencies
        run: npm install

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Build project
        run: npm run build

      - name: Verify vendor directory in ZIP
        run: |
          echo "Checking ZIP file contents..."
          unzip -l dist/fluid-design-system-for-elementor.zip | grep "vendor/autoload.php" || {
            echo "ERROR: vendor/autoload.php not found in ZIP file!"
            echo "Listing ZIP contents..."
            unzip -l dist/fluid-design-system-for-elementor.zip
            
            echo "Checking if vendor directory exists in project..."
            if [ -d "vendor" ]; then
              echo "Vendor directory exists in project:"
              ls -la vendor
              
              if [ -f "vendor/autoload.php" ]; then
                echo "vendor/autoload.php exists in project."
              else
                echo "vendor/autoload.php DOES NOT exist in project!"
              fi
            else
              echo "Vendor directory DOES NOT exist in project!"
            fi
            
            exit 1
          }
          echo "✅ vendor/autoload.php found in ZIP file"

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          # If this is the first tag, don't use --since-tag
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_ENV
            echo "## 🚀 Initial Release" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            echo "* Created Fluid Design System for Elementor plugin" >> $GITHUB_ENV
            echo "* Added fluid spacing utilities" >> $GITHUB_ENV
            echo "* Added fluid typography capabilities" >> $GITHUB_ENV
            echo "* Integrated with Elementor's responsive system" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "CHANGELOG<<EOF" >> $GITHUB_ENV
            echo "## What's Changed Since $PREVIOUS_TAG" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            git log --pretty=format:"* %s" $PREVIOUS_TAG..HEAD | grep -v "Merge" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/fluid-design-system-for-elementor.zip
          draft: false
          prerelease: false
          name: Release ${{ github.ref_name }}
          body: |
            # Fluid Design System for Elementor ${{ github.ref_name }}

            ${{ env.CHANGELOG }}

            ## Installation
            Download the zip file and install via WordPress plugin manager or extract to wp-content/plugins.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify build output (for local testing)
        if: steps.create_release.outcome != 'success'
        run: |
          echo "✅ Build completed successfully. ZIP file created at dist/fluid-design-system-for-elementor.zip"
          echo "Note: GitHub release step was skipped in local testing."

      # Uncomment this section if you want to deploy to WordPress.org
      # - name: WordPress Plugin Deploy
      #   if: success() && !contains(github.ref, '-rc') && !contains(github.ref, '-beta') && !contains(github.ref, '-alpha')
      #   uses: 10up/action-wordpress-plugin-deploy@stable
      #   env:
      #     SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
      #     SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
      #     SLUG: fluid-design-system-for-elementor
